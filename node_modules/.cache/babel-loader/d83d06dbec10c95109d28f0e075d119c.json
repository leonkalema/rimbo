{"ast":null,"code":"import axios from 'axios';\nimport { getMovies as getMoviesAction, searchResults as searchReusltsAction } from './movieActions';\nvar API_KEY = '3d29327e7affd43154360ea1f7fb4f96';\nvar BASE_URL = 'https://api.themoviedb.org/3/discover/movie';\nexport var getMovies = function getMovies() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"?api_key=\").concat(API_KEY, \"&page=\").concat(page)).then(function (movies) {\n      return dispatch(getMoviesAction(movies.data.results, page));\n    });\n  };\n};\nexport var searchResults = function searchResults(id) {\n  var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"?api_key=\").concat(API_KEY, \"&page=\").concat(page)).then(function (search) {\n      return dispatch(searchResultsAction(search.data.results, page));\n    });\n  };\n};\nexport function receiveMovies(json, page) {\n  return {\n    page: page,\n    payload: json.results.map(function (movie) {\n      return movie;\n    })\n  };\n}\nexport var getMovie = function getMovie(id) {\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"?api_key=\").concat(API_KEY)).then(function (movie) {\n      return dispatch({\n        type: 'GET_MOVIE_SUCCESS',\n        payload: movie.data.results\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kaliguy7/Dev/leo/src/actions/index.js"],"names":["axios","getMovies","getMoviesAction","searchResults","searchReusltsAction","API_KEY","BASE_URL","page","dispatch","get","then","movies","data","results","id","search","searchResultsAction","receiveMovies","json","payload","map","movie","getMovie","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAS,IAAIC,eAAtB,EAAuCC,aAAa,IAAIC,mBAAxD,QAAmF,gBAAnF;AAEA,IAAMC,OAAO,GAAG,kCAAhB;AACA,IAAMC,QAAQ,GAAG,6CAAjB;AAIA,OAAO,IAAML,SAAS,GAAG,SAAZA,SAAY;AAAA,MAACM,IAAD,uEAAQ,CAAR;AAAA,SAAe,UAAAC,QAAQ,EAAI;AAEhDR,IAAAA,KAAK,CAACS,GAAN,WAAaH,QAAb,sBAAiCD,OAAjC,mBAAiDE,IAAjD,GAECG,IAFD,CAEM,UAAAC,MAAM;AAAA,aAAIH,QAAQ,CAEvBN,eAAe,CAACS,MAAM,CAACC,IAAP,CAAYC,OAAb,EAAsBN,IAAtB,CAFQ,CAAZ;AAAA,KAFZ;AAOH,GATwB;AAAA,CAAlB;AAWP,OAAO,IAAMJ,aAAa,GAAG,SAAhBA,aAAgB,CAACW,EAAD;AAAA,MAAKP,IAAL,uEAAU,CAAV;AAAA,SAAgB,UAAAC,QAAQ,EAAI;AAErDR,IAAAA,KAAK,CAACS,GAAN,WAAaH,QAAb,sBAAiCD,OAAjC,mBAAiDE,IAAjD,GAECG,IAFD,CAEM,UAAAK,MAAM;AAAA,aAAIP,QAAQ,CAEvBQ,mBAAmB,CAACD,MAAM,CAACH,IAAP,CAAYC,OAAb,EAAsBN,IAAtB,CAFI,CAAZ;AAAA,KAFZ;AAOH,GAT4B;AAAA,CAAtB;AAWP,OAAO,SAASU,aAAT,CAAuBC,IAAvB,EAA6BX,IAA7B,EAAmC;AACtC,SAAO;AAEHA,IAAAA,IAAI,EAAJA,IAFG;AAGHY,IAAAA,OAAO,EAAED,IAAI,CAACL,OAAL,CAAaO,GAAb,CAAiB,UAAAC,KAAK;AAAA,aAAIA,KAAJ;AAAA,KAAtB;AAHN,GAAP;AAKH;AAED,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,EAAD;AAAA,SAAQ,UAAAN,QAAQ,EAAI;AACxCR,IAAAA,KAAK,CAACS,GAAN,WAAaH,QAAb,sBAAiCD,OAAjC,GACKK,IADL,CACU,UAAAW,KAAK;AAAA,aACPb,QAAQ,CACJ;AACIe,QAAAA,IAAI,EAAE,mBADV;AAEIJ,QAAAA,OAAO,EAAEE,KAAK,CAACT,IAAN,CAAWC;AAFxB,OADI,CADD;AAAA,KADf;AAQH,GATuB;AAAA,CAAjB","sourcesContent":["import axios from 'axios';\nimport { getMovies as getMoviesAction, searchResults as searchReusltsAction } from './movieActions';\n\nconst API_KEY = '3d29327e7affd43154360ea1f7fb4f96';\nconst BASE_URL = 'https://api.themoviedb.org/3/discover/movie';\n\n\n\nexport const getMovies = (page = 1 ) => dispatch => {\n    \n    axios.get(`${BASE_URL}?api_key=${API_KEY}&page=${page}`)\n    \n    .then(movies => dispatch(\n        \n     getMoviesAction(movies.data.results, page)\n        )\n        )\n}\n\nexport const searchResults = (id, page=1) => dispatch => {\n    \n    axios.get(`${BASE_URL}?api_key=${API_KEY}&page=${page}`)\n    \n    .then(search => dispatch(\n        \n     searchResultsAction(search.data.results, page)\n        )\n        )\n}\n\nexport function receiveMovies(json, page) {\n    return {\n        \n        page,\n        payload: json.results.map(movie => movie),\n    };\n}\n\nexport const getMovie = (id) => dispatch => {\n    axios.get(`${BASE_URL}?api_key=${API_KEY}`)\n        .then(movie =>\n            dispatch(\n                {\n                    type: 'GET_MOVIE_SUCCESS',\n                    payload: movie.data.results\n                })\n        )\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}