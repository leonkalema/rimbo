{"ast":null,"code":"import _classCallCheck from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaliguy7/Dev/leo/src/components/FavoriteList.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Button, CardColumns, Card } from \"react-bootstrap\";\nimport \"../css/list.css\";\nimport { getMovies } from \"../actions\";\nimport { addFavorites, removeFavorites } from \"../actions/movieActions\";\nimport { connect } from \"react-redux\";\n\nvar FavoriteList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FavoriteList, _Component);\n\n  function FavoriteList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FavoriteList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FavoriteList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      searchInfo: {},\n      page: 1,\n      onBOttom: false\n    };\n\n    _this.setItem = function (movie) {\n      console.log(movie, '*******');\n      var getItem = localStorage.getItem('favourite');\n\n      if (getItem) {\n        var cloneArr = JSON.parse(getItem);\n        cloneArr.push(movie);\n\n        if (movie && movie.name) {\n          localStorage.setItem('favourite', JSON.stringify(cloneArr));\n\n          _this.forceUpdate();\n        } else {\n          cloneArr.map(function (item, index) {\n            if (item.id === movie) {\n              cloneArr.slice(index);\n              console.log(item.name, index);\n            }\n          });\n        }\n      } else {\n        var arr = [movie];\n        localStorage.setItem('favourite', JSON.stringify(arr));\n\n        _this.forceUpdate();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FavoriteList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.getMovies(this.state.page);\n      // window.addEventListener(\"scroll\", this.handleScroll);\n      var getItem = localStorage.getItem('favourite');\n\n      if (getItem) {\n        var cloneArr = JSON.parse(getItem);\n        console.log(cloneArr, '----');\n        this.setState({\n          favorite: cloneArr\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          movies = _this$state.movies,\n          page = _this$state.page,\n          searchInfo = _this$state.searchInfo,\n          favorite = _this$state.favorite;\n      console.log(favorite, '--454545');\n      return React.createElement(CardColumns, {\n        id: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, favorite && favorite.map(function (movie, index) {\n        var isFavor = JSON.parse(localStorage.getItem('favourite')) ? JSON.parse(localStorage.getItem('favourite')).find(function (arr) {\n          return arr.id === movie.id;\n        }) : false; // console.log(isFavor,\"lalalal\")\n\n        return React.createElement(Card, {\n          key: movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"https://image.tmdb.org/t/p/w185\".concat(movie.backdrop_path),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, movie.name), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, movie.vote_average || \"No Rating\", \" \")), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, movie.overview)), React.createElement(Card.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.setItem(!isFavor ? movie : movie.id);\n          },\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: isFavor ? \"glyphicon glyphicon-heart-empty\" : \"glyphicon glyphicon-heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          sm: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(Col, {\n          sm: true,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"glyphicon glyphicon-plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }))))));\n      }) // :\n      // <div>\n      //     <text>no add to favorite</text>\n      // </div>\n      );\n    }\n  }]);\n\n  return FavoriteList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {// movies: state.movies.movies,\n    // page: null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {// getMovies: page => dispatch(getMovies(page)),\n    // addFavorites: id => dispatch(addFavorites(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteList);","map":{"version":3,"sources":["/Users/kaliguy7/Dev/leo/src/components/FavoriteList.js"],"names":["React","Component","Row","Col","Button","CardColumns","Card","getMovies","addFavorites","removeFavorites","connect","FavoriteList","state","movies","searchInfo","page","onBOttom","setItem","movie","console","log","getItem","localStorage","cloneArr","JSON","parse","push","name","stringify","forceUpdate","map","item","index","id","slice","arr","setState","favorite","isFavor","find","backdrop_path","vote_average","overview","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Button, CardColumns, Card } from \"react-bootstrap\";\nimport \"../css/list.css\";\nimport { getMovies } from \"../actions\";\nimport { addFavorites, removeFavorites } from \"../actions/movieActions\";\n\nimport { connect } from \"react-redux\";\n\nclass FavoriteList extends Component {\n    state = {\n        movies: [],\n        searchInfo: {},\n        page: 1,\n        onBOttom: false,\n\n    };\n    componentDidMount() {\n        // this.props.getMovies(this.state.page);\n        // window.addEventListener(\"scroll\", this.handleScroll);\n        let getItem = localStorage.getItem('favourite');\n        if (getItem) {\n            let cloneArr = JSON.parse(getItem);\n            console.log(cloneArr, '----');\n            this.setState({ favorite: cloneArr })\n\n        }\n\n    }\n\n   \n    setItem = (movie) => {\n        console.log(movie, '*******');\n        let getItem = localStorage.getItem('favourite');\n        if (getItem) {\n            let cloneArr = JSON.parse(getItem);\n            cloneArr.push(movie);\n\n            if (movie && movie.name) {\n\n\n                localStorage.setItem('favourite', JSON.stringify(cloneArr))\n                this.forceUpdate();\n            } else {\n                cloneArr.map((item, index) => {\n                    if (item.id === movie) {\n                        cloneArr.slice(index)\n                        console.log(item.name, index);\n\n                    }\n                })\n            }\n        }\n        else {\n            let arr = [movie];\n            localStorage.setItem('favourite', JSON.stringify(arr));\n\n            this.forceUpdate();\n        }\n    }\n    render() {\n        const { movies, page, searchInfo, favorite } = this.state;\n        console.log(favorite, '--454545');\n\n        return (\n            <CardColumns id=\"card-columns\">\n                {\n                    favorite &&\n                    favorite.map((movie, index) => {\n                        const isFavor = JSON.parse(localStorage.getItem('favourite')) ? JSON.parse(localStorage.getItem('favourite')).find(arr => arr.id === movie.id) : false\n                        // console.log(isFavor,\"lalalal\")\n                        return (\n                            <Card key={movie.id}>\n                                <Card.Img\n                                    variant=\"top\"\n                                    src={`https://image.tmdb.org/t/p/w185${movie.backdrop_path}`}\n                                />\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h4>{movie.name}</h4>\n                                        <h6>{movie.vote_average || \"No Rating\"} </h6>\n                                    </Card.Title>\n                                    <Card.Text>{movie.overview}</Card.Text>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <Row>\n                                        <Col sm>\n                                            <Button onClick={() => this.setItem(!isFavor ? movie : movie.id)} variant=\"danger\">\n                                                <span className={isFavor ? \"glyphicon glyphicon-heart-empty\" : \"glyphicon glyphicon-heart\"} />\n                                            </Button>\n                                        </Col>\n                                        <Col sm />\n                                        <Col sm align=\"right\">\n                                            <Button variant=\"danger\">\n                                                <span className=\"glyphicon glyphicon-plus\" />\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Card.Footer>\n                            </Card>\n                        )\n                    }\n\n                    )\n                    // :\n                    // <div>\n                    //     <text>no add to favorite</text>\n                    // </div>\n                }\n            </CardColumns>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // movies: state.movies.movies,\n        // page: null\n        \n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // getMovies: page => dispatch(getMovies(page)),\n        // addFavorites: id => dispatch(addFavorites(id))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FavoriteList);\n"]},"metadata":{},"sourceType":"module"}