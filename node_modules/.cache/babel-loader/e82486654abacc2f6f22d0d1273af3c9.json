{"ast":null,"code":"import _classCallCheck from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaliguy7/Dev/leo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaliguy7/Dev/leo/src/components/ViewMovie.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Button, CardColumns, Card } from \"react-bootstrap\";\nimport \"../css/list.css\";\nimport { getMovies } from \"../actions\";\nimport { addFavorites as _addFavorites, removeFavorites as _removeFavorites, addList as _addList, removeList as _removeList, fetchAddList as _fetchAddList, fetchFavorite as _fetchFavorite } from \"../actions/movieActions\";\nimport { connect } from \"react-redux\";\n\nvar ViewMovie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewMovie, _Component);\n\n  function ViewMovie() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewMovie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewMovie)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: []\n    };\n\n    _this.setItem = function (movie) {\n      console.log(\"WORKINGGGGG\", movie);\n\n      if (movie && movie.name || movie && movie.title) {\n        _this.props.addFavorites(movie);\n      } else {\n        _this.props.removeFavorites(movie);\n      }\n    };\n\n    _this.add = function (movie) {\n      if (movie && movie.name || movie && movie.title) {\n        _this.props.addList(movie); // this.props.fetchAddList();\n        // this.forceUpdate();\n\n      } else {\n        _this.props.removeList(movie); // this.props.fetchAddList();\n        // this.forceUpdate();\n\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewMovie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchFavorite();\n      this.props.fetchAddList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          favourites = _this$props.favourites,\n          add_List = _this$props.add_List,\n          movies = _this$props.movies;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(CardColumns, {\n        id: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, movies && !!movies.length ? movies.map(function (movie, index) {\n        var isFavor = favourites && !!favourites.length ? favourites.find(function (arr) {\n          return arr.id === movie.id;\n        }) : false;\n        var isLike = add_List && !!add_List.length ? add_List.find(function (arr) {\n          return arr.id === movie.id;\n        }) : false;\n        return React.createElement(Card, {\n          key: movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"https://image.tmdb.org/t/p/w185\".concat(movie.backdrop_path),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, movie.name || movie.title), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, movie.vote_average || \"No Rating\", \" \")), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, movie.overview)), React.createElement(Card.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.setItem(!isFavor ? movie : movie.id);\n          },\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: isFavor ? \"glyphicon glyphicon-heart-empty\" : \"glyphicon glyphicon-heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          sm: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(Col, {\n          sm: true,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.add(!isLike ? movie : movie.id);\n          },\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: isLike ? \"glyphicon glyphicon-minus\" : \"glyphicon glyphicon-plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }))))));\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Not Found\")));\n    }\n  }]);\n\n  return ViewMovie;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    add_List: state.movies.addList,\n    favourites: state.movies.addFavorite\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAddList: function fetchAddList(id) {\n      return dispatch(_fetchAddList(id));\n    },\n    fetchFavorite: function fetchFavorite(id) {\n      return dispatch(_fetchFavorite(id));\n    },\n    addFavorites: function addFavorites(id) {\n      return dispatch(_addFavorites(id));\n    },\n    removeFavorites: function removeFavorites(id) {\n      return dispatch(_removeFavorites(id));\n    },\n    addList: function addList(id) {\n      return dispatch(_addList(id));\n    },\n    removeList: function removeList(id) {\n      return dispatch(_removeList(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewMovie);","map":{"version":3,"sources":["/Users/kaliguy7/Dev/leo/src/components/ViewMovie.js"],"names":["React","Component","Row","Col","Button","CardColumns","Card","getMovies","addFavorites","removeFavorites","addList","removeList","fetchAddList","fetchFavorite","connect","ViewMovie","state","movies","setItem","movie","console","log","name","title","props","add","favourites","add_List","length","map","index","isFavor","find","arr","id","isLike","backdrop_path","vote_average","overview","mapStateToProps","addFavorite","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Button, CardColumns, Card } from \"react-bootstrap\";\nimport \"../css/list.css\";\nimport { getMovies } from \"../actions\";\nimport {\n  addFavorites,\n  removeFavorites,\n  addList,\n  removeList,\n  fetchAddList,\n  fetchFavorite\n} from \"../actions/movieActions\";\nimport { connect } from \"react-redux\";\n\nclass ViewMovie extends Component {\n  state = {\n    movies: []\n  };\n  componentDidMount(){\n    this.props.fetchFavorite();\n    this.props.fetchAddList();\n\n  }\n  setItem = movie => {\n    console.log(\"WORKINGGGGG\",movie)\n    if ((movie && movie.name) || (movie && movie.title)) {\n      this.props.addFavorites(movie);\n    } else {\n      this.props.removeFavorites(movie);\n    }\n  };\n\n  add = (movie) => {\n    if ((movie && movie.name) || (movie && movie.title)) {\n      this.props.addList(movie);\n      // this.props.fetchAddList();\n      // this.forceUpdate();\n    } else {\n      this.props.removeList(movie);\n      // this.props.fetchAddList();\n      // this.forceUpdate();\n    }\n  }\n\n  render() {\n    const { favourites, add_List, movies } = this.props;\n    return (\n      <div>\n        <CardColumns id=\"card-columns\">\n          {movies && !!movies.length ? (\n            movies.map((movie, index) => {\n              const isFavor =\n              favourites && !!favourites.length\n                  ? favourites.find(arr => arr.id === movie.id)\n                  : false;\n              const isLike =\n                add_List && !!add_List.length\n                  ? add_List.find(arr => arr.id === movie.id)\n                  : false;\n\n              return (\n                <Card key={movie.id}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={`https://image.tmdb.org/t/p/w185${\n                      movie.backdrop_path\n                    }`}\n                  />\n                  <Card.Body>\n                    <Card.Title>\n                      <h4>{movie.name || movie.title}</h4>\n                      <h6>{movie.vote_average || \"No Rating\"} </h6>\n                    </Card.Title>\n                    <Card.Text>{movie.overview}</Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Row>\n                      <Col sm>\n                        <Button\n                          onClick={() =>\n                            this.setItem(!isFavor ? movie : movie.id)\n                          }\n                          variant=\"danger\"\n                        >\n                          <span\n                            className={\n                              isFavor\n                                ? \"glyphicon glyphicon-heart-empty\"\n                                : \"glyphicon glyphicon-heart\"\n                            }\n                          />\n                        </Button>\n                      </Col>\n                      <Col sm />\n                      <Col sm align=\"right\">\n                        <Button\n                          onClick={() => this.add(!isLike ? movie : movie.id)}\n                          variant=\"danger\"\n                        >\n                          <span\n                            className={\n                              isLike\n                                ? \"glyphicon glyphicon-minus\"\n                                : \"glyphicon glyphicon-plus\"\n                            }\n                          />\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Card.Footer>\n                </Card>\n              );\n            })\n          ) : (\n            <div>Not Found</div>\n          )}\n        </CardColumns>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    add_List: state.movies.addList,\n    favourites: state.movies.addFavorite\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAddList: id => dispatch(fetchAddList(id)),\n    fetchFavorite: id => dispatch(fetchFavorite(id)),\n    addFavorites: id => dispatch(addFavorites(id)),\n    removeFavorites: id => dispatch(removeFavorites(id)),\n    addList: id => dispatch(addList(id)),\n    removeList: id => dispatch(removeList(id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewMovie);\n"]},"metadata":{},"sourceType":"module"}